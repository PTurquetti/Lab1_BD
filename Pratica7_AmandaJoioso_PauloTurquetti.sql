/* Pratica 7

Amanda Valukas Breviglieri Joioso - 4818232
Paulo Henrique Vedovatto Turquetti - 13750791
*/


-- Inserção de dados para testes: 

-- Para questão 1
INSERT INTO ORBITA_ESTRELA(ORBITANTE, ORBITADA) VALUES ('Alasia', 'Aiolos');
INSERT INTO ORBITA_ESTRELA(ORBITANTE, ORBITADA) VALUES ('Alp Ant', 'Aiolos');
INSERT INTO ORBITA_ESTRELA(ORBITANTE, ORBITADA) VALUES ('Alp Ara', 'Alp Aps');
INSERT INTO ORBITA_ESTRELA(ORBITANTE, ORBITADA) VALUES ('Alp Car', 'Alp Aps');
INSERT INTO ORBITA_ESTRELA(ORBITANTE, ORBITADA) VALUES ('Alp CrA', 'Alp Col');


-- Para questão 2
INSERT INTO FEDERACAO(NOME, DATA_FUND) VALUES ('FED1', TO_DATE('2024-04-29', 'YYYY-MM-DD'));
INSERT INTO FEDERACAO(NOME, DATA_FUND) VALUES ('FED2', TO_DATE('2024-04-29', 'YYYY-MM-DD'));

-- Para questão 3
INSERT INTO COMUNIDADE (ESPECIE, NOME, QTD_HABITANTES) VALUES ('A', 'COMUNIDADE 1', 600);
INSERT INTO COMUNIDADE (ESPECIE, NOME, QTD_HABITANTES) VALUES ('A ab dolore', 'COMUNIDADE 2', 1200);



-- Para questão 4
INSERT INTO ORBITA_PLANETA (PLANETA, ESTRELA, DIST_MIN, DIST_MAX, PERIODO) VALUES ('Nihil deserunt.', 'Gl 808', 0.3, 0.4, 30);
INSERT INTO ORBITA_PLANETA (PLANETA, ESTRELA, DIST_MIN, DIST_MAX, PERIODO) VALUES ('Quae possimus.', 'Gl 808', 1.8, 2, 160);
INSERT INTO ORBITA_PLANETA (PLANETA, ESTRELA, DIST_MIN, DIST_MAX, PERIODO) VALUES ('In magni quas.', 'Gl 808', 2.3, 3, 510);
INSERT INTO ORBITA_PLANETA (PLANETA, ESTRELA, DIST_MIN, DIST_MAX, PERIODO) VALUES ('At molestiae.', 'Gl 667C', 4.7, 4.8, 780);
INSERT INTO ORBITA_PLANETA (PLANETA, ESTRELA, DIST_MIN, DIST_MAX, PERIODO) VALUES ('WD 1856+534 b', '7Zet1CrB', 0.3, 2, 30);
INSERT INTO ORBITA_PLANETA (PLANETA, ESTRELA, DIST_MIN, DIST_MAX, PERIODO) VALUES ('Modi sit harum.', '7Zet1CrB', 5.1, 5.3, 220);




-- QUESTÃO 1 -----------------------------------------------------------------------------------------------
DECLARE
    CURSOR C_ORBITA_ESTRELA IS
        SELECT OE.ORBITADA AS ID_ESTRELA, E.NOME AS NOME, COUNT(ORBITADA) AS ESTRELAS_ORBITANTES
        FROM ORBITA_ESTRELA OE JOIN ESTRELA E ON OE.ORBITADA = E.ID_ESTRELA
        GROUP BY ORBITADA, E.NOME
        ORDER BY ESTRELAS_ORBITANTES DESC, ID_ESTRELA;
    V_RESULTADO C_ORBITA_ESTRELA%ROWTYPE;
    V_MAX_ORBITANTES NUMBER;
    
BEGIN
    OPEN C_ORBITA_ESTRELA;
    DBMS_OUTPUT.PUT_LINE('ESTRELAS COM MAIOR NUMERO DE ESTRELAS ORBITANTES:');
    
    FETCH C_ORBITA_ESTRELA INTO V_RESULTADO;
    V_MAX_ORBITANTES := V_RESULTADO.ESTRELAS_ORBITANTES;
    
    LOOP
        DBMS_OUTPUT.PUT_LINE('ID_ETRELA: ' || V_RESULTADO.ID_ESTRELA || ' NOME: ' || V_RESULTADO.NOME);
        FETCH C_ORBITA_ESTRELA INTO V_RESULTADO;
        EXIT WHEN V_RESULTADO.ESTRELAS_ORBITANTES < V_MAX_ORBITANTES OR C_ORBITA_ESTRELA%NOTFOUND;
    END LOOP;
    
    DBMS_OUTPUT.PUT_LINE('QUANTIDADE DE ESTRELAS ORBITANTES: ' || V_MAX_ORBITANTES);
    CLOSE C_ORBITA_ESTRELA;
END;


/* SAÍDA DBMS

ESTRELAS COM MAIOR NUMERO DE ESTRELAS ORBITANTES:
ID_ETRELA: Aiolos NOME: Aiolos
ID_ETRELA: Alp Aps NOME: 
QUANTIDADE DE ESTRELAS ORBITANTES: 2

*/

-- QUESTÃO 2 ------------------------------------------------------------------------------------------------------
DECLARE
    V_NUMERO_REMOVIDOS NUMBER;
BEGIN 
    DELETE FROM FEDERACAO WHERE NOME IN (SELECT NOME FROM FEDERACAO
                                            MINUS
                                            SELECT F.NOME FROM
                                            FEDERACAO F JOIN NACAO N ON F.NOME = N.FEDERACAO);

    V_NUMERO_REMOVIDOS := SQL%ROWCOUNT;

    IF V_NUMERO_REMOVIDOS > 0 THEN
        DBMS_OUTPUT.PUT_LINE(V_NUMERO_REMOVIDOS || ' FEDERACOES FORAM REMOVIDAS');
    ELSE
        DBMS_OUTPUT.PUT_LINE('NENHUMA FEDERACAO FOI REMOVIDA');
    END IF;
    COMMIT;
END;

/* SAÍDA DBMS:

NENHUMA FEDERACAO FOI REMOVIDA  --(antes de inserir federações sem nação)

2 FEDERACOES FORAM REMOVIDAS  --(após inserir federações sem nação associada)

*/



-- QUESTÃO 3 -----------------------------------------------------------------------
DECLARE
    V_PLANETA PLANETA.ID_ASTRO%TYPE := 'Quae possimus.';
    V_COMUNIDADE_ESPECIE COMUNIDADE.ESPECIE%TYPE := 'A';
    V_COMUNIDADE_NOME COMUNIDADE.NOME%TYPE := 'COMUNIDADE 1';

    V_DATA_INI DATE := TO_DATE(SYSDATE, 'DD/MM/YYYY');
    V_DATA_FIM DATE;
    
    V_HABITANTES NUMBER;
    V_ESPECIE_PLANETA_OR ESPECIE.PLANETA_OR%TYPE;
    V_ESPECIE_INTELIGENTE ESPECIE.INTELIGENTE%TYPE;
BEGIN 
    SELECT QTD_HABITANTES INTO V_HABITANTES FROM COMUNIDADE
            WHERE NOME = V_COMUNIDADE_NOME AND ESPECIE = V_COMUNIDADE_ESPECIE; 

    IF V_HABITANTES <= 1000 THEN
        -- Adiciona 100 anos
        V_DATA_FIM := ADD_MONTHS(SYSDATE, 1200); 
    ELSE
        -- Adiciona 50 anos
        V_DATA_FIM := ADD_MONTHS(SYSDATE, 600); 
    END IF;

    -- Insere na tabela
    INSERT INTO HABITACAO(PLANETA, ESPECIE, COMUNIDADE, DATA_INI, DATA_FIM)
    VALUES (V_PLANETA, V_COMUNIDADE_ESPECIE, V_COMUNIDADE_NOME, V_DATA_INI, V_DATA_FIM);
    
    DBMS_OUTPUT.PUT_LINE('HABITACAO ADICIONADA');
    
    SELECT PLANETA_OR, INTELIGENTE 
    INTO V_ESPECIE_PLANETA_OR, V_ESPECIE_INTELIGENTE 
    FROM ESPECIE WHERE NOME = V_COMUNIDADE_ESPECIE;
    
    DBMS_OUTPUT.PUT_LINE('Infos da Especie:');
    
    DBMS_OUTPUT.PUT_LINE('Especie: ' || V_COMUNIDADE_ESPECIE);
    DBMS_OUTPUT.PUT_LINE('Planeta Origem: ' || V_ESPECIE_PLANETA_OR);
    DBMS_OUTPUT.PUT_LINE('Inteligente: ' || V_ESPECIE_INTELIGENTE);

    DBMS_OUTPUT.PUT_LINE('Infos da habitacao dessa especie:');
    DBMS_OUTPUT.PUT_LINE('Data inicio: ' || V_DATA_INI);
    DBMS_OUTPUT.PUT_LINE('Data fim: ' || V_DATA_FIM);


    COMMIT;
END;

/* SAIDA DBMS

HABITACAO ADICIONADA
Infos da Especie:
Especie: A
Planeta Origem: Magni ex rerum.
Inteligente: V
Infos da habitacao dessa especie:
Data inicio: 30/04/24
Data fim: 30/04/24

*/

-- QUESTÃO 4 -----------------------------------------------------------------------------------
DECLARE
    -- Valores inseridos pelo usuario
    V_CLASSIFICACAO ESTRELA.CLASSIFICACAO%TYPE := 'A8III';
    V_DISTANCIA_MIN ORBITA_PLANETA.DIST_MIN%TYPE := 1;
    
    CURSOR C_ORBITA_PLANETA IS
                SELECT OP.ESTRELA, OP.PLANETA, OP.DIST_MIN FROM ESTRELA E 
                JOIN ORBITA_PLANETA OP ON E.ID_ESTRELA = OP.ESTRELA
                WHERE E.CLASSIFICACAO = V_CLASSIFICACAO
            FOR UPDATE;
                
    V_RESULTADO C_ORBITA_PLANETA%ROWTYPE;
    V_CONTADOR NUMBER := 0;
    
BEGIN
    OPEN C_ORBITA_PLANETA;
    LOOP
        FETCH C_ORBITA_PLANETA INTO V_RESULTADO;
        EXIT WHEN C_ORBITA_PLANETA%NOTFOUND;
        IF V_RESULTADO.DIST_MIN > V_DISTANCIA_MIN THEN
            DELETE FROM ORBITA_PLANETA 
                WHERE PLANETA = V_RESULTADO.PLANETA
                AND ESTRELA = V_RESULTADO.ESTRELA;
            V_CONTADOR := V_CONTADOR + 1;
        END IF;
    END LOOP;
    DBMS_OUTPUT.PUT_LINE(V_CONTADOR || ' TUPLAS DE ORBITA_PLANETA FORAM REMOVIDAS');
    COMMIT;
    CLOSE C_ORBITA_PLANETA;
END;

/*

-- SAÍDA DBMS:

3 TUPLAS DE ORBITA_PLANETA FORAM REMOVIDAS


-- TABELA ORBITA_PLANETA ANTES DA EXECUCAO:

PLANETA        ESTREA   MIN MAX PERIODO
Nihil deserunt.	Gl 808	0,3	0,4	30
Quae possimus.	Gl 808	1,8	2	160
In magni quas.	Gl 808	2,3	3	510
At molestiae.	Gl 667C	4,7	4,8	780
WD 1856+534 b	7Zet1CrB	0,3	2	30
Modi sit harum.	7Zet1CrB	5,1	5,3	220


TABELA ORBITA_PLANETA APÓS DA EXECUCAO:

PLANETA        ESTREA   MIN MAX PERIODO
Nihil deserunt.	Gl 808	0,3	0,4	30
WD 1856+534 b	7Zet1CrB	0,3	2	30
Modi sit harum.	7Zet1CrB	5,1	5,3	220

*/


